
@{
    ViewData["Title"] = "Disciplina";
    Layout = "~/Views/Shared/_LayoutApp.cshtml";
}


<style>
    .user-icon-container {
        display: flex;
        align-items: center;
    }

        .user-icon-container .icon-tabler {
            margin-right: 10px;
            width: 50px;
            height: 50px;
        }

        .user-icon-container .page-title {
            margin-left: -4px;
        }

</style>

@section PagePreTitle{

    <div class="col">
        <!-- Page pre-title -->
        <div class="user-icon-container">
            <svg xmlns="http://www.w3.org/2000/svg" class="icon icon-tabler icon-tabler-school" width="36" height="36" viewBox="0 0 24 24" stroke-width="1" stroke="#a79a66" fill="none" stroke-linecap="round" stroke-linejoin="round">
  <path stroke="none" d="M0 0h24v24H0z" fill="none"/>
  <path d="M22 9l-10 -4l-10 4l10 4l10 -4v6" />
  <path d="M6 10.6v5.4a6 3 0 0 0 12 0v-5.4" />
</svg>
            <h2 class="page-title">
                Disciplinas
            </h2>
        </div>
    </div>


}

@section PageActions{


}


<div style="text-align: right;">
    @(Html.DevExtreme().CheckBox()
        .Text("Mostrar todas las Disciplinas")
        .ElementAttr(new { style = "margin-right: 15px; font-size: 15px; margin-bottom: 10px; margin-top:10px; font-weight:bold;" })
        .OnValueChanged("toggleFilter")
        )
</div>


    @(Html.DevExtreme().DataGrid<TSK.Models.Entity.Disciplina>()
        .ID("grid1")
        .DataSource(ds => ds.Mvc()
            .Controller("Disciplina")
            .LoadAction("Get")
            .InsertAction("Post")
            .UpdateAction("Put")
            .Key("IdDis")
        )
        .ShowBorders(true)
        .RowAlternationEnabled(false)
        .ShowColumnLines(true)
        .ShowRowLines(true)
        .Paging(paging => paging.PageSize(50))
        .FilterRow(f => f.Visible(true))
        .HeaderFilter(f => f.Visible(true))
        .Pager(pager =>
        {
            pager.ShowPageSizeSelector(true);
            pager.AllowedPageSizes(new[] { 50, 100, 150 });
            pager.ShowInfo(true);
        })
        .RemoteOperations(true)
        .OnContentReady("applyDefaultFilter")
        .Columns(columns =>
        {

            columns.AddFor(m => m.Nombre).Caption("Disciplinas");
            columns.AddFor(m => m.IdNiv).Lookup(lookup => lookup
                .DataSource(ds => ds.WebApi().Controller("Disciplina").LoadAction("NivelsLookup").Key("Value"))
                .ValueExpr("Value")
                .DisplayExpr("Text")
            ).Caption("Nivel");
            columns.AddFor(m => m.Habilitado).Width(120);
        })
        .Editing(e => e.Mode(GridEditMode.Popup)
                .AllowUpdating(true)
                .AllowAdding(true)
                .UseIcons(true)
                .Popup(p => p
                    .Title("Disciplina")
                    .ShowTitle(true)
                    .Width("50%")
                    .Height(320)
                )

                .Form(f => f.Items(items =>
                {
                    items.AddGroup()
                        .ColCount(2)
                        .ColSpan(2)
                        .Items(groupItems =>
                        {
                            groupItems.AddSimpleFor(m => m.Nombre).ColSpan(2);
                            groupItems.AddSimpleFor(m => m.IdNiv).ColSpan(2);
                            groupItems.AddSimpleFor(m => m.Habilitado).Label(label => label.Location(FormLabelLocation.Left));
                        });
                }))

            )
    )


<script>

    var defaultFilterApplied = false;

    function applyDefaultFilter() {
        if (!defaultFilterApplied) {
            var grid = $("#grid1").dxDataGrid("instance");
            grid.filter([
                ["Habilitado", "=", true]
            ]);
            defaultFilterApplied = true;
        }
    }

    function toggleFilter(e) {
        var grid = $("#grid1").dxDataGrid("instance");

        if (e.value) {
            grid.clearFilter();
        } else {
            grid.filter([
                ["Habilitado", "=", true]
            ]);
        }
    }
</script>