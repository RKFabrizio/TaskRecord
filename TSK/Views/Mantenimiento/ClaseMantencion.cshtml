
@{
    ViewData["Title"] = "ClaseMantencion";
    Layout = "~/Views/Shared/_LayoutApp.cshtml";
}

<style>
    .user-icon-container {
        display: flex;
        align-items: center;
    }

        .user-icon-container .icon-tabler {
            margin-right: 10px;
            width: 50px;
            height: 50px;
        }

        .user-icon-container .page-title {
            margin-left: -4px;
        }

</style>

@section PagePreTitle{

    <div class="col">
        <!-- Page pre-title -->
        <div class="user-icon-container">
            <svg xmlns="http://www.w3.org/2000/svg" class="icon icon-tabler icon-tabler-tools" width="36" height="36" viewBox="0 0 24 24" stroke-width="1" stroke="#a79a66" fill="none" stroke-linecap="round" stroke-linejoin="round">
                <path stroke="none" d="M0 0h24v24H0z" fill="none" />
                <path d="M3 21h4l13 -13a1.5 1.5 0 0 0 -4 -4l-13 13v4" />
                <line x1="14.5" y1="5.5" x2="18.5" y2="9.5" />
                <polyline points="12 8 7 3 3 7 8 12" />
                <line x1="7" y1="8" x2="5.5" y2="9.5" />
                <polyline points="16 12 21 17 17 21 12 16" />
                <line x1="16" y1="17" x2="14.5" y2="18.5" />
            </svg>
            <h2 class="page-title">
                Clase Mantención
            </h2>
        </div>
    </div>


}

@section PageActions{


}

<div class="row row-cards">
    <div class="col-md-12">
        <div class="card">
            <div class="form-group mb-3">
                <div class='form-control'>
                    <div class="col-md-12">

                        @(Html.DevExtreme().TabPanel()

                            .Items(items =>
                            {

                                items.Add()
                                .Title("LISTA DE CLASES DE MANTENCION HABILITADAS")
                                .Template(new TemplateName("TAB1"));
                                items.Add()
                                .Title("LISTA DE CLASES DE MANTENCION DESHABILITADAS")
                                .Template(new TemplateName("TAB2"));

                            })
                            .SelectedIndex(0)
                            .Loop(false)
                            .AnimationEnabled(true)
                            .SwipeEnabled(true)
                            .OnItemClick("refreshGrid")
                            )
                    </div>
                </div>
            </div>


        </div>
    </div>
</div>

@using (Html.DevExtreme().NamedTemplate("TAB1"))
{
    @(Html.DevExtreme().DataGrid<TSK.Models.Entity.ClaseMantencion>()
        .ID("grid1")
        .DataSource(ds => ds.Mvc()
            .Controller("ClaseMantencion")
            .LoadAction("Get").OnLoaded("filterTrue")
            .InsertAction("Post")
            .UpdateAction("Put")
            .Key("IdClm")
        )
        .Columns(columns =>
        {
            columns.AddFor(m => m.IdClm).Caption("ID").Width(70);
            columns.AddFor(m => m.Nombre);
            columns.AddFor(m => m.Habilitado).Width(120);
        })
        .ShowBorders(true)
        .RowAlternationEnabled(false)
        .ShowColumnLines(true)
        .ShowRowLines(true)
        .Paging(paging => paging.PageSize(20))
        .FilterRow(f => f.Visible(true))
        .HeaderFilter(f => f.Visible(true))
        .Pager(pager =>
        {
            pager.ShowPageSizeSelector(true);
            pager.AllowedPageSizes(new[] { 20, 50, 100 });
            pager.ShowInfo(true);
        })
        .RemoteOperations(true)
        .Editing(e => e.Mode(GridEditMode.Popup)
                .AllowUpdating(true)
                .AllowAdding(true)
                .UseIcons(true)
                .Popup(p => p
                    .Title("Clase Mantención")
                    .ShowTitle(true)
                    .Width("60%")
                    .Height(220)
                )
                .Form(f => f.Items(items =>
                {
                    items.AddGroup()
                        .ColCount(2)
                        .ColSpan(2)
                        .Items(groupItems =>
                        {
                            groupItems.AddSimpleFor(m => m.IdClm);
                            groupItems.AddSimpleFor(m => m.Nombre);
                            groupItems.AddSimpleFor(m => m.Habilitado).Label(label => label.Location(FormLabelLocation.Left));
                        });
                }))
            )

    )
}
@using (Html.DevExtreme().NamedTemplate("TAB2"))
{
    @(Html.DevExtreme().DataGrid<TSK.Models.Entity.ClaseMantencion>()
        .ID("grid2")
        .DataSource(ds => ds.Mvc()
            .Controller("ClaseMantencion")
            .LoadAction("Get").OnLoaded("filterFalse")
            .InsertAction("Post")
            .UpdateAction("Put")
            .Key("IdClm")
        )
        .Columns(columns =>
        {
            columns.AddFor(m => m.IdClm).Caption("ID").Width(70).AllowEditing(false);
            columns.AddFor(m => m.Nombre).AllowEditing(false);
            columns.AddFor(m => m.Habilitado).Width(120);
        })
        .ShowBorders(true)
        .RowAlternationEnabled(false)
        .ShowColumnLines(true)
        .ShowRowLines(true)
        .Paging(paging => paging.PageSize(20))
        .FilterRow(f => f.Visible(true))
        .HeaderFilter(f => f.Visible(true))
        .Pager(pager =>
        {
            pager.ShowPageSizeSelector(true);
            pager.AllowedPageSizes(new[] { 20, 50, 100 });
            pager.ShowInfo(true);
        })
        .RemoteOperations(true)
        .Editing(editing =>
                                        {
                                            editing.AllowUpdating(true);
                                        })

    )
}

<script>
    function filterTrue() {
        var grid = $("#grid1").dxDataGrid("instance");
        grid.filter([
            ["Habilitado", "=", true]
        ]);
    }

    function filterFalse() {
        var grid = $("#grid2").dxDataGrid("instance");
        grid.filter([
            ["Habilitado", "=", false]
        ]);
    }

    function refreshGrid() {
        $("#grid1").dxDataGrid("instance").refresh();
        $("#grid2").dxDataGrid("instance").refresh();
    }

</script>