
@{
    ViewData["Title"] = "Entrega";
    Layout = "~/Views/Shared/_LayoutApp.cshtml";
}

@section PagePreTitle{

    <div class="col">
     <!-- Page pre-title -->
        <div class="page-pretitle">
            Mantenimiento
        </div>
        <h2 class="page-title">
            Entregas
        </h2>
    </div>

}

@section PageActions{


}

<div class="row row-cards">
    <div class="col-md-12">
        <div class="card">
            <div class="form-group mb-3">
                <div class='form-control'>
                    <div class="col-md-12">

                        @(Html.DevExtreme().TabPanel()

                                .Items(items =>
                                {

                                    items.Add()
                                    .Title("LISTA DE ENTREGAS HABILITADAS")
                                    .Template(new TemplateName("TAB1"));
                                    items.Add()
                                    .Title("LISTA DE ENTREGAS DESHABILITADAS")
                                    .Template(new TemplateName("TAB2"));

                                })
                                .SelectedIndex(0)
                                .Loop(false)
                                .AnimationEnabled(true)
                                .SwipeEnabled(true)
                                .OnItemClick("refreshGrid")
                                )
                    </div>
                </div>
            </div>


        </div>
    </div>
</div>

@using (Html.DevExtreme().NamedTemplate("TAB1"))
{

@(Html.DevExtreme().DataGrid<TSK.Models.Entity.Entrega>()
    .ID("grid1")
    .DataSource(ds => ds.Mvc()
        .Controller("Entregas")
        .LoadAction("Get").OnLoaded("filterTrue")
        .InsertAction("Post")
        .UpdateAction("Put")
        .Key("IdEnt")
    )
    .Columns(columns => {
        columns.AddFor(m => m.Nombre);
        columns.AddFor(m => m.Habilitado).Width(120);
    })
    .ShowBorders(true)
    .RowAlternationEnabled(true)
    .ShowColumnLines(true)
    .ShowRowLines(true)
    .Paging(paging => paging.PageSize(50))
    .FilterRow(f => f.Visible(true))
    .HeaderFilter(f => f.Visible(true))
    .SearchPanel(searchPanel => searchPanel.Visible(true))
    .Pager(pager =>{
        pager.ShowPageSizeSelector(true);
        pager.AllowedPageSizes(new[] {50, 100, 150});
        pager.ShowInfo(true);
    })
    .RemoteOperations(true)
    .Editing(e => e.Mode(GridEditMode.Popup)
            .AllowUpdating(true)
            .AllowAdding(true)
            .UseIcons(true)
            .Popup(p => p
                .Title("Entrega")
                .ShowTitle(true)
                .Width("40%")
                .Height(230)
            )
            .Form(f => f.Items(items => {
                items.AddGroup()
                    .ColCount(2)
                    .ColSpan(2)
                    .Items(groupItems => {
                        groupItems.AddSimpleFor(m => m.Nombre).ColSpan(2);
                        groupItems.AddSimpleFor(m => m.Habilitado).Label(label => label.Location(FormLabelLocation.Left));
                    });
            }))
        )
)
}

@using (Html.DevExtreme().NamedTemplate("TAB2"))
{
    @(Html.DevExtreme().DataGrid<TSK.Models.Entity.Entrega>()
        .ID("grid2")
        .DataSource(ds => ds.Mvc()
            .Controller("Entregas")
            .LoadAction("Get").OnLoaded("filterFalse")
            .InsertAction("Post")
            .UpdateAction("Put")
            .Key("IdEnt")
        )
        .Columns(columns =>
        {
            columns.AddFor(m => m.Nombre).AllowEditing(false);
            columns.AddFor(m => m.Habilitado).Width(120);
        })
        .ShowBorders(true)
        .RowAlternationEnabled(true)
        .ShowColumnLines(true)
        .ShowRowLines(true)
        .Paging(paging => paging.PageSize(50))
        .FilterRow(f => f.Visible(true))
        .HeaderFilter(f => f.Visible(true))
        .SearchPanel(searchPanel => searchPanel.Visible(true))
        .Pager(pager =>
        {
            pager.ShowPageSizeSelector(true);
            pager.AllowedPageSizes(new[] { 50, 100, 150 });
            pager.ShowInfo(true);
        })
        .RemoteOperations(true)
       .Editing(editing =>
                                        {
                                            editing.AllowUpdating(true);
                                        })
    )
}

                <script>
    function filterTrue() {
        var grid = $("#grid1").dxDataGrid("instance");
        grid.filter([
            ["Habilitado", "=", true]
        ]);
    }

    function filterFalse() {
        var grid = $("#grid2").dxDataGrid("instance");
        grid.filter([
            ["Habilitado", "=", false]
        ]);
    }

    function refreshGrid() {
        $("#grid1").dxDataGrid("instance").refresh();
        $("#grid2").dxDataGrid("instance").refresh();
    }

</script>