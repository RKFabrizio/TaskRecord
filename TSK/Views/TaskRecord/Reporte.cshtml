@{
    ViewData["Title"] = "Reporte";
    Layout = "~/Views/Shared/_LayoutApp.cshtml";
}

@section PagePreTitle{

    <div class="col">
        <!-- Page pre-title -->
        <div class="page-pretitle">
            Mantenimiento
        </div>
        <h2 class="page-title">
            Gestion de Pautas
        </h2>
    </div>

}

@section PageActions{


}


@(Html.DevExtreme().Popup()
    .ID("addReportPopup")
    .Width(700)
    .Height(600)
    .Title("Crear nuevo reporte")
    .Visible(false)
    .ContentTemplate(@<text>

    @using (Html.BeginForm("Post", "Reporte", FormMethod.Post))
            {
                @(Html.DevExtreme().Form<TSK.Models.Entity.Reporte>()

        .LabelLocation(FormLabelLocation.Top)
        .Items(items =>
        {

            items.AddSimpleFor(m => m.IdPm)
            .Label(label => label.Text("Pauta de Mantenimiento"))
            .Editor(e => e
            .Lookup()
            .DataSource(ds => ds.WebApi().Controller("Reporte").LoadAction("PmsLookup1").Key("Value"))
            .ValueExpr("Value")
            .DisplayExpr("Text")
            );

            items.AddSimpleFor(m => m.IdUni)
            .Label(label => label.Text("Unidad"))
            .Editor(e => e
            .Lookup()
            .DataSource(ds => ds.WebApi().Controller("Reporte").LoadAction("UnidadsLookup").Key("Value"))
            .ValueExpr("Value")
            .DisplayExpr("Text")
            );

            items.AddSimpleFor(m => m.Fecha);

            items.AddSimpleFor(m => m.Horometro);

            items.AddSimpleFor(m => m.Comentario).Editor(editor => editor.TextArea().Height(100));

            items.AddSimpleFor(m => m.Habilitado);

            items.AddButton()
            .HorizontalAlignment(HorizontalAlignment.Left)
            .ButtonOptions(b => b.Text("Aceptar")
            .Type(ButtonType.Default)
            .UseSubmitBehavior(true)
            );



        })
        )
            }

        </text>))



    @(Html.DevExtreme().Button()
    .Text("Agregar reporte")
    .Icon("add")
    .Type(ButtonType.Normal)
    .OnClick("showPopup")
    )

    @(Html.DevExtreme().DataGrid<TSK.Models.Entity.Reporte>()
        .DataSource(ds => ds.Mvc()
            .Controller("Reporte")
            .LoadAction("Get")
            .InsertAction("Post")
            .UpdateAction("Put")
            .Key("IdRep")

        )
        .Selection(s => s.Mode(SelectionMode.Single))
        .Columns(columns =>
        {
            columns.AddFor(m => m.IdRep).Caption("ID").Width(70);
            columns.AddFor(m => m.IdPm).Lookup(lookup => lookup
                .DataSource(ds => ds.WebApi().Controller("Reporte").LoadAction("PmsLookup").Key("Value"))
                .ValueExpr("Value")
                .DisplayExpr("Text")
            ).GroupIndex(0).Caption("PM");
            columns.AddFor(m => m.IdUni).Lookup(lookup => lookup
                .DataSource(ds => ds.WebApi().Controller("Reporte").LoadAction("UnidadsFlotaLookup").Key("Value"))
                .ValueExpr("Value")
                .DisplayExpr("Text")
            ).Caption("Unidad");
            columns.AddFor(m => m.Fecha);
            columns.AddFor(m => m.Horometro).Caption("Horómetro");
            columns.AddFor(m => m.Comentario);
            columns.AddFor(m => m.Avance)
                .Caption("% Avance")
                .DataType(GridColumnDataType.Number)
                .Alignment(HorizontalAlignment.Center)
                .Format(Format.Percent)
                .Width(130);
            columns.AddFor(m => m.Habilitado).Caption("Finalizado");
        })
        .ShowBorders(true)
        .ShowColumnLines(true)
        .ShowRowLines(true)
        .Paging(paging => paging.PageSize(20))
        .FilterRow(f => f.Visible(true))
        .HeaderFilter(f => f.Visible(true))
        .SearchPanel(searchPanel => searchPanel.Visible(true))
        .Pager(pager =>
        {
            pager.ShowPageSizeSelector(true);
            pager.AllowedPageSizes(new[] { 20, 50, 100 });
            pager.ShowInfo(true);
        })
        .OnSelectionChanged("selection_changed")
        .RemoteOperations(true)
        .Grouping(grouping => grouping.AutoExpandAll(true))
        .GroupPanel(groupPanel => groupPanel
            .EmptyPanelText("Arrastre un encabezado de columna aquí para agrupar por esa columna")
            .Visible(true))
        .Editing(e => e.Mode(GridEditMode.Popup)
                .AllowUpdating(true)
                .UseIcons(true)
                .Popup(p => p
                    .Title("Reporte")
                    .ShowTitle(true)
                    .Width("70%")
                    .Height(500)
                )
                .Form(f => f.Items(items =>
                {
                    items.AddGroup()
                        .ColCount(2)
                        .ColSpan(2)
                        .Items(groupItems =>
                        {
                            groupItems.AddSimpleFor(m => m.IdPm).ColSpan(2);
                            groupItems.AddSimpleFor(m => m.IdUni).ColSpan(2);
                            groupItems.AddSimpleFor(m => m.Fecha)
                            .Editor(e => e
                            .DateBox()
                            .Value(new JS("null"))
                            .Width("100%")
                            )
                            ;

                            groupItems.AddSimpleFor(m => m.Horometro);
                            groupItems.AddSimpleFor(m => m.Comentario).ColSpan(2)
                            .Editor(editor => editor.TextArea().Height(100));
                            groupItems.AddSimpleFor(m => m.Habilitado).Label(label => label.Location(FormLabelLocation.Left));
                        });
                }))
            )
    )





<script>
    function selection_changed(selectedItems) {
        var data = selectedItems.selectedRowsData[0];
        if (data) {
            $(location).attr('href', 'ReporteDetalle/' + data.IdRep);

        }
    }

    function showPopup() {
        var popup = $("#addReportPopup").dxPopup("instance");
        popup.show();
    }

    function cancelForm() {
        $("#addReportPopup").dxPopup("instance").hide();
    }

    function submitForm() {
        // Guarda los cambios y cierra el formulario
        // Aquí va el código para guardar los cambios
        $("#addReportPopup").dxPopup("instance").hide();
    }
</script>