
@{
    ViewData["Title"] = "PMSistema";
    Layout = "~/Views/Shared/_LayoutApp.cshtml";
}

@section PagePreTitle{

    <div class="col">
     <!-- Page pre-title -->
        <div class="page-pretitle">
            Mantenimiento
        </div>
        <h2 class="page-title">
            Sistema >> Pauta
        </h2>
    </div>

}

@section PageActions{


}

<div class="row row-cards">
    <div class="col-md-12">
        <div class="card">
            <div class="form-group mb-3">
                <div class='form-control'>
                    <div class="col-md-12">

                        @(Html.DevExtreme().TabPanel()

                            .Items(items =>
                            {

                                items.Add()
                                .Title("LISTA DE PAUTA - SISTEMA")
                                .Template(new TemplateName("TAB1"));
                                items.Add()
                                .Title("AÑADIR SISTEMAS")
                                .Template(new TemplateName("TAB2"));

                            })
                            .SelectedIndex(0)
                            .Loop(false)
                            .AnimationEnabled(true)
                            .SwipeEnabled(true)
                            .OnItemClick("refreshed")
                            )
                    </div>
                </div>
            </div>


        </div>
    </div>
</div>


@using (Html.DevExtreme().NamedTemplate("TAB1"))
{

    @(Html.DevExtreme().DataGrid<TSK.Models.Entity.PmSistema>()
        .ID("tab1")
        .DataSource(ds => ds.Mvc()
            .Controller("PmSistemas")
            .LoadAction("Get")
            .InsertAction("Post")
            .UpdateAction("Put")
            .Key("IdPms")
        )
        .RemoteOperations(true)
        .Columns(columns =>
        {
            columns.AddFor(m => m.IdSis).Lookup(lookup => lookup
                .DataSource(ds => ds.WebApi().Controller("PmSistemas").LoadAction("SistemasLookup").Key("Value"))
                .ValueExpr("Value")
                .DisplayExpr("Text")
            ).Caption("Sistema");

            columns.AddFor(m => m.IdPm).Lookup(lookup => lookup
                .DataSource(ds => ds.WebApi().Controller("PmSistemas").LoadAction("PmsLookup").Key("Value"))
                .ValueExpr("Value")
                .DisplayExpr("Text")
                ).GroupIndex(0).Caption("PM");

        })
       .AllowColumnReordering(true)
        .GroupPanel(groupPanel => groupPanel
            .EmptyPanelText("Arrastre un encabezado de columna aquí para agrupar por esa columna")
            .Visible(true))
        .ShowBorders(true)
        .RowAlternationEnabled(false)
        .ShowColumnLines(true)
        .GroupPanel(g => g.Visible(true))
        .Grouping(g => g.AutoExpandAll(false))
        .ShowRowLines(true)
        .Paging(paging => paging.PageSize(50))
        .FilterRow(f => f.Visible(false))
        .HeaderFilter(f => f.Visible(true))
        .SearchPanel(searchPanel => searchPanel.Visible(true))
        .Pager(pager =>
        {
            pager.ShowPageSizeSelector(true);
            pager.AllowedPageSizes(new[] { 50, 100, 200 });
            pager.ShowInfo(true);
        })
        .RemoteOperations(true)
        .Editing(e => e.Mode(GridEditMode.Popup)
                .AllowUpdating(true)
                .AllowAdding(true)
                .UseIcons(true)
                .Popup(p => p
                    .Title("Pauta de Mantenimiento - Sistema")
                    .ShowTitle(true)
                    .Width("50%")
                    .Height(320)
                )
                .Form(f => f.Items(items =>
                {
                    items.AddGroup()
                        .ColCount(2)
                        .ColSpan(2)
                        .Items(groupItems =>
                        {
                            groupItems.AddSimpleFor(m => m.IdPm).ColSpan(2);
                            groupItems.AddSimpleFor(m => m.IdSis).ColSpan(2);
                        });
                }))

        )
    )
}

@using (Html.DevExtreme().NamedTemplate("TAB2"))
{
    <br />
    <div>
        <h4>
            Selecciona tu pauta de mantenimiento:
        </h4>
    </div>

    @(Html.DevExtreme().Form<TSK.Models.Entity.PmSistema>()
                .ID("form")
                .Items(items =>
                {
                    items.AddSimpleFor(m => m.IdPm)
                    .Editor(e => e
                        .Lookup()
                            .DataSource(ds => ds.Mvc().Controller("PmSistemas").LoadAction("PmsLookup").Key("idPm"))
                        .ValueExpr("Value")
                        .DisplayExpr("Text")
                        .OnValueChanged("refreshData")
                        .SearchEnabled(true)

                            ).Label(label => label
                        .Text("Pauta de Mantenimiento - Sistema")
                        .Visible(false)
                    );
                })
            )

   
            @(Html.DevExtreme().DataGrid<TSK.Models.Entity.PmSistema>()
                .ID("grid")
                .DataSource(ds => ds.Mvc()
                .Controller("PmSistemas").LoadAction("PmSistemasLookup")
                .InsertAction("Post").OnInserting("change")
                .UpdateAction("Put").DeleteAction("Delete").Key("IdPms")
                .LoadParams(new { IdPm = new JS("getIdPm") })
                )
                .RemoteOperations(true)
                .Columns(columns => {

                columns.AddFor(m => m.IdSis).Lookup(lookup => lookup
                        .DataSource(ds => ds.WebApi().Controller("PmSistemas").LoadAction("SistemasLookup").Key("Value"))
                        .ValueExpr("Value")
                        .DisplayExpr("Text")).Caption("Sistema");


            })

            .Grouping(grouping => grouping.AutoExpandAll(true))
            .GroupPanel(groupPanel => groupPanel
                .EmptyPanelText("")
                .Visible(true))
            .ShowBorders(true)
            .RowAlternationEnabled(false)
            .ShowColumnLines(true)
            .ShowRowLines(true)

            .Paging(paging => paging.PageSize(50))
            .FilterRow(f => f.Visible(true))
            .HeaderFilter(f => f.Visible(true))
            .Pager(pager =>
            {
                pager.ShowPageSizeSelector(true);
                pager.AllowedPageSizes(new[] { 50, 100, 200 });
                pager.ShowInfo(true);
            })
                    .Editing(editing =>
            {
                    editing.Mode(GridEditMode.Batch);
                    editing.AllowAdding(true);
                    editing.AllowUpdating(true);
                    editing.AllowDeleting(true);
                    editing.SelectTextOnEditStart(true);
                    editing.StartEditAction(GridStartEditAction.Click);
            })
            )

}



<script>

    function refreshData() {
        var grid = $("#grid").dxDataGrid("instance");
        grid.refresh();
    }

    function getFormInstance() {
        return $("#form").dxForm("instance");
    }

    function getIdPm() {
        var form = $("#form").dxForm("instance");
        var IdPm = form.getEditor("IdPm").option("value");
        return IdPm;

    }
    function selectBox_valueChanged(data) {
        getFormInstance().option("formData", data.value);
    }
    function onOptionsValueChanged(data) {
        let dataGrid = $("#gridContainer").dxDataGrid("instance");
        dataGrid.option("editing.selectTextOnEditStart", data.value);
    }

    function onStartEditActionValueChanged(data) {
        let dataGrid = $("#gridContainer").dxDataGrid("instance");
        dataGrid.option("editing.startEditAction", data.value);
    }

    function change(e) {
        e["IdPm"] = getIdPm();
    }

    function refreshed() {
        var grid = $("#tab1").dxDataGrid("instance");
        grid.refresh();
    }

</script>