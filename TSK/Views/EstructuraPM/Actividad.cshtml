@using TSK.Models;
@using System.Linq;

@{
    ViewData["Title"] = "Actividad";
    Layout = "~/Views/Shared/_LayoutApp.cshtml";
}


<style>
    .user-icon-container {
        display: flex;
        align-items: center;
    }

        .user-icon-container .icon-tabler {
            margin-right: 10px;
            width: 50px;
            height: 50px;
        }

        .user-icon-container .page-title {
            margin-left: -4px;
        }


    .page-title {
        color: #a79a66;
    }

</style>

@section PagePreTitle{

    <div class="col">
        <!-- Page pre-title -->
        <div class="user-icon-container">
            <svg xmlns="http://www.w3.org/2000/svg" class="icon icon-tabler icon-tabler-file-report" width="36" height="36" viewBox="0 0 24 24" stroke-width="1" stroke="#a79a66" fill="none" stroke-linecap="round" stroke-linejoin="round">
  <path stroke="none" d="M0 0h24v24H0z" fill="none"/>
  <circle cx="17" cy="17" r="4" />
  <path d="M17 13v4h4" />
  <path d="M12 3v4a1 1 0 0 0 1 1h4" />
  <path d="M11.5 21h-6.5a2 2 0 0 1 -2 -2v-14a2 2 0 0 1 2 -2h7l5 5v2m0 3v4" />
</svg>
            <h2 class="page-title">
                Actividad
            </h2>
        </div>
    </div>


}

@section PageActions{

}

<div style="text-align: right;">
    @(Html.DevExtreme().CheckBox()
        .Text("Mostrar todas las Actividades")
        .ElementAttr(new { style = "margin-right: 15px; font-size: 15px; margin-bottom: 10px; margin-top:10px; font-weight:bold;" })
        .OnValueChanged("toggleFilter")
        )
</div>



    
    @(Html.DevExtreme().DataGrid<TSK.Models.Entity.Actividad>()
                .ID("grid1")
                .DataSource(ds => ds.Mvc()
                    .Controller("Actividads")
                    .LoadAction("Get")
                    .InsertAction("Post")
                    .UpdateAction("Put")
                    .Key("IdAct")
                )
                .OnContentReady("applyDefaultFilter")
                .RemoteOperations(true)
                .Columns(columns =>
                {

                    columns.AddFor(m => m.Titulo).Caption("Actividad").Width("80%");

                    columns.AddFor(m => m.IdRan).Lookup(lookup => lookup
                        .DataSource(ds => ds.WebApi().Controller("Actividads").LoadAction("RangosLookup").Key("Value"))
                        .ValueExpr("Value")
                        .DisplayExpr("Text")
                    ).Caption("Usar Rangos").HidingPriority(12);

                    columns.AddFor(m => m.IdCon).Lookup(lookup => lookup
                        .DataSource(ds => ds.WebApi().Controller("Actividads").LoadAction("ConsecuenciaLookup").Key("Value"))
                        .ValueExpr("Value")
                        .DisplayExpr("Text")
                    ).Caption("Consecuencia").HidingPriority(11);

                    columns.AddFor(m => m.IdClm).Lookup(lookup => lookup
                        .DataSource(ds => ds.WebApi().Controller("Actividads").LoadAction("ClaseMantencionsLookup").Key("Value"))
                        .ValueExpr("Value")
                        .DisplayExpr("Text")
                    ).Caption("Clase Mantencion").HidingPriority(10);

                    columns.AddFor(m => m.IdDis).Lookup(lookup => lookup
                        .DataSource(ds => ds.WebApi().Controller("Actividads").LoadAction("DisciplinasLookup").Key("Value"))
                        .ValueExpr("Value")
                        .DisplayExpr("Text")
                    ).Caption("Disciplina").HidingPriority(9);



                    columns.AddFor(m => m.IdUm).Lookup(lookup => lookup
                        .DataSource(ds => ds.WebApi().Controller("Actividads").LoadAction("UnidadMedidaLookup").Key("Value"))
                        .ValueExpr("Value")
                        .DisplayExpr("Text")
                    ).Caption("Unidad Medida").HidingPriority(8);

                    columns.AddFor(m => m.IdFrc).Lookup(lookup => lookup
                        .DataSource(ds => ds.WebApi().Controller("Actividads").LoadAction("FrecuenciaLookup").Key("Value"))
                        .ValueExpr("Value")
                        .DisplayExpr("Text")
                    ).Caption("Frecuencia").HidingPriority(7);

                    columns.AddFor(m => m.SubActividad).HidingPriority(6);

                    columns.AddFor(m => m.Especificacion).HidingPriority(5);

                    columns.AddFor(m => m.Descripcion).HidingPriority(4);

                    columns.AddFor(m => m.Duracion).HidingPriority(3);

                    columns.AddFor(m => m.Inicio).HidingPriority(2);

                    columns.AddFor(m => m.Fin).HidingPriority(1);

                    columns.AddFor(m => m.Referencia).Caption("Nombre de Referencia").HidingPriority(0);

                    columns.AddFor(m => m.Habilitado);

                })
                .ShowBorders(true)
                .RowAlternationEnabled(false)
                .ShowColumnLines(true)
                .ShowRowLines(true)
                .Paging(paging => paging.PageSize(50))
                .FilterRow(f => f.Visible(true))
                .HeaderFilter(f => f.Visible(true))
                .SearchPanel(searchPanel => searchPanel.Visible(true))
                .Pager(pager =>
                {
                    pager.ShowPageSizeSelector(true);
                    pager.AllowedPageSizes(new[] { 20, 50, 100 });
                    pager.ShowInfo(true);
                })
                .RemoteOperations(true)
                  .Editing(e => e.Mode(GridEditMode.Popup)
                        .AllowUpdating(true)
                        .AllowAdding(true)
                        .UseIcons(true)
                        .Popup(p => p
                            .Title("Actividad")
                            .ShowTitle(true)
                            .Width("70%")
                            .Height(600)
                        )
                         .Form(f => f.Items(items =>
                        {
                            items.AddGroup()
                                .ColCount(2)
                                .ColSpan(2)
                                .Items(groupItems =>
                                {
                                    groupItems.AddSimpleFor(m => m.Titulo).ColSpan(2);
                                    groupItems.AddSimpleFor(m => m.IdDis);
                                    groupItems.AddSimpleFor(m => m.IdCon);
                                    groupItems.AddSimpleFor(m => m.IdClm);
                                    groupItems.AddSimpleFor(m => m.Duracion);
                                    groupItems.AddSimpleFor(m => m.IdUm);
                                    groupItems.AddSimpleFor(m => m.IdFrc);
                                    groupItems.AddSimpleFor(m => m.Descripcion).ColSpan(2).Editor(e => e
                                    .TextArea().Height(100));
                                    groupItems.AddSimpleFor(m => m.Habilitado).Label(label => label.Location(FormLabelLocation.Left));

                                });
                            items.AddGroup()
                               .Caption("Referencias")
                               .ColCount(2)
                               .ColSpan(2)
                               .Items(groupItems =>
                               {
                                   groupItems.AddSimpleFor(m => m.Referencia);
                                   groupItems.AddSimpleFor(m => m.ReferenciaUrl);

                               });

                            items.AddGroup()
                            .Caption("Especificaciones")
                            .ColCount(2)
                            .ColSpan(2)

                            .Items(groupItems =>
                            {
                                groupItems.AddSimpleFor(m => m.Especificacion).ColSpan(2).Editor(e => e
                                    .TextArea()
                                    .Height(140)
                                );
                            });

                            items.AddGroup()
                           .Caption("Actividades Extras")
                           .ColCount(2)
                           .ColSpan(2)
                           .Items(groupItems =>
                           {
                               groupItems.AddSimpleFor(m => m.SubActividad).ColSpan(2).Editor(e => e
                                   .TextArea()
                                   .Height(140)
                               );
                           });




                        }))



                        )

            )




<script>
    var defaultFilterApplied = false;

    function applyDefaultFilter() {
        if (!defaultFilterApplied) {
            var grid = $("#grid1").dxDataGrid("instance");
            grid.filter([
                ["Habilitado", "=", true]
            ]);
            defaultFilterApplied = true;
        }
    }

    function toggleFilter(e) {
        var grid = $("#grid1").dxDataGrid("instance");

        if (e.value) {
            grid.clearFilter();
        } else {
            grid.filter([
                ["Habilitado", "=", true]
            ]);
        }
    }

</script>