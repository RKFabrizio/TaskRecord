
@{
    ViewData["Title"] = "PM";
    Layout = "~/Views/Shared/_LayoutApp.cshtml";
}

<style>
    .user-icon-container {
        display: flex;
        align-items: center;
    }

        .user-icon-container .icon-tabler {
            margin-right: 10px;
            width: 50px;
            height: 50px;
        }

        .user-icon-container .page-title {
            margin-left: -4px;
        }

        .page-title {
        color: #a79a66;
    }

</style>

@section PagePreTitle{

    <div class="col">
        <!-- Page pre-title -->
        <div class="user-icon-container">
            <svg xmlns="http://www.w3.org/2000/svg" class="icon icon-tabler icon-tabler-file-export" width="36" height="36" viewBox="0 0 24 24" stroke-width="1" stroke="#a79a66" fill="none" stroke-linecap="round" stroke-linejoin="round">
                <path stroke="none" d="M0 0h24v24H0z" fill="none" />
                <path d="M14 3v4a1 1 0 0 0 1 1h4" />
                <path d="M11.5 21h-4.5a2 2 0 0 1 -2 -2v-14a2 2 0 0 1 2 -2h7l5 5v5m-5 6h7m-3 -3l3 3l-3 3" />
            </svg>
            <h2 class="page-title">
                Plantilla de Pauta de Mantenimiento (PM)
            </h2>
        </div>
    </div>


}

@section PageActions{


}

<div style="text-align: right;">
    @(Html.DevExtreme().CheckBox()
        .Text("Mostrar todas las Plantillas")
        .ElementAttr(new { style = "margin-right: 15px; font-size: 15px; margin-bottom: 10px; margin-top:10px; font-weight:bold;" })
        .OnValueChanged("toggleFilter")
        )
</div>

    @(Html.DevExtreme().DataGrid<TSK.Models.Entity.Pm>()
            .ID("grid1")
            .DataSource(ds => ds.Mvc()
                .Controller("Pm")
                .LoadAction("Get")
                .InsertAction("Post")
                .UpdateAction("Put")
                .Key("IdPm")
            )
            .OnContentReady("applyDefaultFilter")
            .Columns(columns =>
            {
                columns.AddFor(m => m.Nombre).Caption("Nombre").Caption("Plantilla");
                columns.AddFor(m => m.Descripcion).Caption("Descripción");
                columns.AddFor(m => m.IdFlt).Caption("Flota").Lookup(lookup => lookup
                    .DataSource(ds => ds.WebApi().Controller("Pm").LoadAction("FlotaLookup").Key("Value"))
                    .ValueExpr("Value")
                    .DisplayExpr("Text")
                );
                columns.AddFor(m => m.Habilitado).Width(140);
                columns.AddFor(m => m.IdPmCopy).Caption("Copiar de").Lookup(lookup => lookup
                    .DataSource(ds => ds.WebApi().Controller("Pm").LoadAction("PMLookup").Key("Value"))
                    .ValueExpr("Value")
                    .DisplayExpr("Text")
                ).Visible(false);
            })
            .ShowBorders(true)
            .RowAlternationEnabled(false)
            .ShowColumnLines(true)
            .ShowRowLines(true)
            .Paging(paging => paging.PageSize(20))
            .FilterRow(f => f.Visible(true))
            .HeaderFilter(f => f.Visible(true))
            .SearchPanel(searchPanel => searchPanel.Visible(true))
            .Pager(pager =>
            {
                pager.ShowPageSizeSelector(true);
                pager.AllowedPageSizes(new[] { 20, 50, 100 });
                pager.ShowInfo(true);
            })
            .RemoteOperations(true)
            .Editing(e => e.Mode(GridEditMode.Popup)
                    .AllowUpdating(true)
                    .AllowAdding(true)
                    .UseIcons(true)
                    .Popup(p => p
                        .Title("PM")
                        .ShowTitle(true)
                        .Width("50%")
                        .Height(500)
                    )
                    .Form(f => f.Items(items =>
                    {
                        items.AddGroup()
                            .ColCount(2)
                            .ColSpan(2)
                            .Items(groupItems =>
                            {
                                groupItems.AddSimpleFor(m => m.Nombre).ColSpan(2);
                                groupItems.AddSimpleFor(m => m.Descripcion).ColSpan(2);
                                groupItems.AddSimpleFor(m => m.IdFlt).ColSpan(2);
                                groupItems.AddSimpleFor(m => m.Habilitado).Label(label => label.Location(FormLabelLocation.Left));

                            });
                        items.AddGroup()
                        .Caption("Crear el PM con la estructura de:")
                        .ColCount(2)
                        .ColSpan(2)
                        .Items(groupItems =>
                        {
                            groupItems.AddSimpleFor(m => m.IdPmCopy).ColSpan(2);

                        });



                    }))


            )

        )


<script>
    var defaultFilterApplied = false;

    function applyDefaultFilter() {
        if (!defaultFilterApplied) {
            var grid = $("#grid1").dxDataGrid("instance");
            grid.filter([
                ["Habilitado", "=", true]
            ]);
            defaultFilterApplied = true;
        }
    }

    function toggleFilter(e) {
        var grid = $("#grid1").dxDataGrid("instance");

        if (e.value) {
            grid.clearFilter();
        } else {
            grid.filter([
                ["Habilitado", "=", true]
            ]);
        }
    }

</script>