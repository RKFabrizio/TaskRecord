@using TSK.Models;

@{
    ViewData["Title"] = "PMSistemaActividad";
    Layout = "~/Views/Shared/_LayoutApp.cshtml";
}

@using DevExtreme.AspNet.Mvc.Builders;

@section PagePreTitle{

    <div class="col">
        <!-- Page pre-title -->
        <div class="page-pretitle">
            Mantenimiento
        </div>
        <h2 class="page-title">
            Actividad >> Sistema >> Pauta
        </h2>
    </div>

}

@section PageActions{


}


<div class="row row-cards">
    <div class="col-md-12">
        <div class="card">
            <div class="form-group mb-3">
                <div class='form-control'>
                    <div class="col-md-12">

                        @(Html.DevExtreme().TabPanel()

                            .Items(items =>
                            {

                                items.Add()
                                .Title("LISTA DE ACTIVIDADES")
                                .Template(new TemplateName("TAB1"));
                                items.Add()
                                .Title("AÑADIR ACTIVIDADES")
                                .Template(new TemplateName("TAB2"));

                            })
                            .SelectedIndex(0)
                            .Loop(false)
                            .AnimationEnabled(true)
                            .SwipeEnabled(true)
                            )
                    </div>
                </div>
            </div>


        </div>
    </div>
</div>


@using (Html.DevExtreme().NamedTemplate("TAB1"))
{
    @(Html.DevExtreme().DataGrid<TSK.Models.Entity.PmsisActividad>()

            .DataSource(ds => ds.Mvc()
                .Controller("PmsisActividad")
                .LoadAction("Get")
                .InsertAction("Post")
                .UpdateAction("Put")
                .DeleteAction("Delete")
                .Key("IdAct", "IdPms")
            )
            .Columns(columns =>
            {

                columns.AddFor(m => m.IdPms).Lookup(lookup => lookup
                    .DataSource(ds => ds.WebApi().Controller("PmsisActividad").LoadAction("PmSistemasLookup").Key("Value"))
                    .ValueExpr("Value")
                    .DisplayExpr("Text")
                ).GroupIndex(0).Caption("PM - Sistema");

                columns.AddFor(m => m.Orden).Width(100);
                columns.AddFor(m => m.IdAct).Lookup(lookup => lookup
                    .DataSource(ds => ds.WebApi().Controller("PmsisActividad").LoadAction("ActividadsLookup").Key("Value"))
                    .ValueExpr("Value")
                    .DisplayExpr("Text")
                ).Caption("Actividad");

                columns.AddFor(m => m.Habilitado).Width(100);
            })
            .AllowColumnReordering(true)
            .Grouping(grouping => grouping.AutoExpandAll(true))
            .GroupPanel(groupPanel => groupPanel
                .EmptyPanelText("Arrastre un encabezado de columna aquí para agrupar por esa columna")
                .Visible(true))
            .ShowBorders(true)
            .RowAlternationEnabled(false)
            .ShowColumnLines(true)
            .ShowRowLines(true)
            .Paging(paging => paging.PageSize(50))
            .FilterRow(f => f.Visible(true))
            .HeaderFilter(f => f.Visible(true))
            .SearchPanel(searchPanel => searchPanel.Visible(true))
            .Pager(pager =>
            {
                pager.ShowPageSizeSelector(true);
                pager.AllowedPageSizes(new[] { 50, 100, 200 });
                pager.ShowInfo(true);
            })
            .Editing(e => e.Mode(GridEditMode.Popup)
                    .AllowUpdating(true)
                    .AllowDeleting(true)
                    .UseIcons(true)

                    .Popup(p => p
                        .Title("PM-Sistema-Actividad")
                        .ShowTitle(true)
                        .Width("70%")
                        .Height(400)
                    )
                    .Form(f => f.Items(items =>
                    {
                        items.AddGroup()
                            .ColCount(2)
                            .ColSpan(2)
                            .Items(groupItems =>
                            {
                                groupItems.AddSimpleFor(m => m.IdPms).ColSpan(2);
                                groupItems.AddSimpleFor(m => m.IdAct);
                                groupItems.AddSimpleFor(m => m.Orden);
                                groupItems.AddSimpleFor(m => m.Habilitado);

                            });

                    }))

            )

        )

}
@using (Html.DevExtreme().NamedTemplate("TAB2"))
{
    // filtrar la pauta
    @(Html.DevExtreme().Form<TSK.Models.Entity.PmsisActividad>()
            .ID("form")
            .Items(items =>
            {
                items.AddSimpleFor(m => m.IdPms)
                .Editor(e => e
                    .Lookup()
                    .DataSource(ds => ds.Mvc().Controller("PmsisActividad").LoadAction("PmSistemasLookup").Key("IdPms"))
                    .ValueExpr("Value")
                    .DisplayExpr("Text")
                    .OnValueChanged("lookupValueChanged")
                    ).Label(label => label.Text("Pauta de Mantenimiento - Sistema"));
            })
        )


    @(Html.DevExtreme().DataGrid<TSK.Models.Query2>()
                .ID("grid")
                .DataSource(ds => ds.Mvc().Controller("PmsisActividad").LoadAction("PmsisActividadesLookup"))
                .RemoteOperations(true)
                .Columns(columns =>
                {
                    columns.AddFor(m => m.NombreActividad).Caption("Nombre");
                    columns.AddFor(m => m.Orden).Caption("Orden");

                })
                .Editing(editing =>
                {
                    editing.AllowAdding(true);
                    editing.AllowUpdating(true);
                })
        )
}

<script>
    function lookupValueChanged() {
        var form = $("#form").dxForm("instance");
        var grid = $("#grid").dxDataGrid("instance");
        var IdPms = form.getEditor("IdPms").option("value"); // Obtengo el IdPms (funcionando)
        console.log(IdPms);
        grid.filter([
                ["IdPms", "=", IdPms]
        ]);
        grid.refresh();
    }
</script>


