@using TSK.Models;
@using System.Linq;

@{
    ViewData["Title"] = "PMSistemaActividad";
    Layout = "~/Views/Shared/_LayoutApp.cshtml";
}

@using DevExtreme.AspNet.Mvc.Builders;

@section PagePreTitle{

    <div class="col">
        <h2 class="page-title">
            Actividad >> Sistema >> Pauta
        </h2>
    </div>

}

@section PageActions{


}

<style>
    .black {
        background-color: white;
    }

    .pauta {
        margin-left: 10px;
    }

    .text {
        margin-left: 10px;
    }

</style>

<div class="row row-cards">
    <div class="col-md-12">
            <div class="form-group mb-3">
                <div class='form-control'>
                    <div class="col-md-12">

                        @(Html.DevExtreme().TabPanel()

                            .Items(items =>
                            {

                                items.Add()
                                .Title("LISTA DE PAUTA - SISTEMA")
                                .Template(new TemplateName("TAB1"));
                                items.Add()
                                .Title("AÑADIR ACTIVIDADES")
                                .Template(new TemplateName("TAB2"));

                            })
                            .SelectedIndex(0)
                            .Loop(false)
                            .AnimationEnabled(true)
                            .SwipeEnabled(true)
                            .OnItemClick("refreshed")
                            )
                    </div>
                </div>
            </div>
    </div>
</div>



@using (Html.DevExtreme().NamedTemplate("TAB1"))
{

  
    @(Html.DevExtreme().DataGrid<TSK.Models.Entity.PmsisActividad>()
            .ID("tab1")
            .DataSource(ds => ds.Mvc()
                .Controller("PmsisActividad")
                .LoadAction("Get")
                .InsertAction("Post")
                .UpdateAction("Put")
                .DeleteAction("Delete")
                .Key("IdAct", "IdPms")
            )
            .Columns(columns =>
            {

                columns.AddFor(m => m.IdPms).Lookup(lookup => lookup
                    .DataSource(ds => ds.WebApi().Controller("PmsisActividad").LoadAction("PmSistemasLookup").Key("Value"))
                    .ValueExpr("Value")
                    .DisplayExpr("Text")
                ).GroupIndex(0).Caption("PAUTA-SISTEMA").Width(100);

                columns.AddFor(m => m.Orden).Width(100);
                columns.AddFor(m => m.IdAct).Lookup(lookup => lookup
                    .DataSource(ds => ds.WebApi().Controller("PmsisActividad").LoadAction("ActividadsLookup").Key("Value"))
                    .ValueExpr("Value")
                    .DisplayExpr("Text")
                ).Caption("Actividad").AllowEditing(false);
            })
            .AllowColumnReordering(true)
            .Grouping(grouping => grouping.AutoExpandAll(true))
            .GroupPanel(groupPanel => groupPanel
                .EmptyPanelText("Arrastre un encabezado de columna aquí para agrupar por esa columna")
                .Visible(true))
            .ShowBorders(true)
            .RowAlternationEnabled(false)
            .ShowColumnLines(true)
            .ShowRowLines(true)
            .Paging(paging => paging.PageSize(50))
            .FilterRow(f => f.Visible(true))
            .HeaderFilter(f => f.Visible(true))
            .SearchPanel(searchPanel => searchPanel.Visible(true))
            .Pager(pager =>
            {
                pager.ShowPageSizeSelector(true);
                pager.AllowedPageSizes(new[] { 50, 100, 200 });
                pager.ShowInfo(true);
            })
           .Editing(editing =>
                            {
                                editing.AllowUpdating(true);
                            })

        )

}

@using (Html.DevExtreme().NamedTemplate("TAB2"))
{
    <div class="black">
        <br />
        <div>
            <h4 class="pauta">
                Selecciona tu Pauta de Mantenimiento - Sistema:
            </h4>
        </div>
        <div class="text">
            @(Html.DevExtreme().Form<TSK.Models.Entity.PmsisActividad>()
                .ID("form")
                .Items(items =>
                {
                    items.AddSimpleFor(m => m.IdPms)
                    .Editor(e => e
                    .Lookup()
                    .DataSource(ds => ds.Mvc().Controller("PmsisActividad").LoadAction("PmSistemasLookup").Key("IdPms"))
                    .ValueExpr("Value")
                    .DisplayExpr("Text")
                    .OnValueChanged("refreshData")
                    .SearchEnabled(true)

                    ).Label(label => label
                    .Text("Pauta de Mantenimiento - Sistema")
                    .Visible(false)
                    );
                })
                )

            @(
                Html.DevExtreme().DataGrid<TSK.Models.Entity.PmsisActividad>()
                .ID("grid")
                .DataSource(ds => ds.Mvc().Controller("PmsisActividad").LoadAction("PmsisActividadesLookup").InsertAction("Post").OnInserting("change")
                .UpdateAction("Put").DeleteAction("Delete").Key("IdPms", "IdAct")
                .LoadParams(new { IdPms = new JS("getIdPms") }))
                .RemoteOperations(true)
                .Columns(columns =>
                {
                    columns.AddFor(m => m.IdPms).Caption("PM - Sistema").Width(200).AllowEditing(false);

                    columns.AddFor(m => m.IdAct).Lookup(lookup => lookup
                    .DataSource(ds => ds.WebApi().Controller("PmsisActividad").LoadAction("ActividadsLookup").Key("Value"))
                    .ValueExpr("Value")
                    .DisplayExpr("Text")
                    ).Caption("Actividad");
                    columns.AddFor(m => m.Orden).Caption("Orden");
                })

                .Grouping(grouping => grouping.AutoExpandAll(true))
                .GroupPanel(groupPanel => groupPanel
                .EmptyPanelText("")
                .Visible(true))
                .ShowBorders(true)
                .RowAlternationEnabled(false)
                .ShowColumnLines(true)
                .ShowRowLines(true)

                .Paging(paging => paging.PageSize(50))
                .FilterRow(f => f.Visible(true))
                .HeaderFilter(f => f.Visible(true))
                .SearchPanel(searchPanel => searchPanel.Visible(true))
                .Pager(pager =>
                {
                    pager.ShowPageSizeSelector(true);
                    pager.AllowedPageSizes(new[] { 50, 100, 200 });
                    pager.ShowInfo(true);
                })
                .Editing(editing =>
                {
                    editing.Mode(GridEditMode.Batch);
                    editing.AllowAdding(true);
                    editing.AllowUpdating(true);
                    editing.AllowDeleting(true);
                    editing.SelectTextOnEditStart(true);
                    editing.StartEditAction(GridStartEditAction.Click);
                })



                )
        </div>

    </div>

}

<script>

    function refreshData() {
        var grid = $("#grid").dxDataGrid("instance");
        grid.refresh();
    }

    function getFormInstance() {
        return $("#form").dxForm("instance");
    }

    function getIdPms() {
        var form = $("#form").dxForm("instance");
        var IdPms = form.getEditor("IdPms").option("value");
        return IdPms;

    }
    function selectBox_valueChanged(data) {
        getFormInstance().option("formData", data.value);
    }
       function onOptionsValueChanged(data) {
        let dataGrid = $("#gridContainer").dxDataGrid("instance");
        dataGrid.option("editing.selectTextOnEditStart", data.value);
    }

    function onStartEditActionValueChanged(data) {
        let dataGrid = $("#gridContainer").dxDataGrid("instance");
        dataGrid.option("editing.startEditAction", data.value);
    }

     function change(e) {
        e["IdPms"] = getIdPms();
    }

    function refreshed() {
        var grid = $("#tab1").dxDataGrid("instance");
        grid.refresh();
    }
 

</script>


